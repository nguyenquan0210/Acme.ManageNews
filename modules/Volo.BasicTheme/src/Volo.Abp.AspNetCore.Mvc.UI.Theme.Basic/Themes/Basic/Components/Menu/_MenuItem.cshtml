@using Volo.Abp.UI.Navigation
@model ApplicationMenuItem
@{
    var elementId = string.IsNullOrEmpty(Model.ElementId) ? string.Empty : $"id=\"{Model.ElementId}\"";
    var cssClass = string.IsNullOrEmpty(Model.CssClass) ? string.Empty : Model.CssClass;
    var disabled = Model.IsDisabled ? "disabled" : string.Empty;
    var url = string.IsNullOrEmpty(Model.Url) ? "#" : Url.Content(Model.Url);
}
@if (Model.IsLeaf)
{
    if (Model.Url != null)
    {
       
             <a class="dropdown-item ps-3 border-radius-md mb-1 @cssClass @disabled" href="@url" target="@Model.Target" @Html.Raw(elementId)>
            @if (Model.Icon != null)
            {
                if (Model.Icon.StartsWith("fa"))
                {
                    <i class="@Model.Icon"></i>
                }
            }
            @Model.DisplayName
        </a>
       
    }
}
else
{
    <li class="nav-item dropdown dropdown-hover dropdown-subitem">
        <a role="button" class="dropdown-item py-2 ps-3 border-radius-md" data-bs-toggle="dropdown"
                aria-haspopup="true" aria-expanded="false">
                <div class="w-100 d-flex align-items-center justify-content-between">
                    <div>
                        <h6 class="dropdown-header text-dark font-weight-bolder d-flex justify-content-cente align-items-center p-0">
                            <span>
                                <i class="@(Model.Icon ?? "")"> </i>
                                @Model.DisplayName
                            </span>
                            
                        </h6>
                        <span class="text-sm"></span>
                    </div>
                    <img src="https://demos.creative-tim.com/material-kit/assets/img/down-arrow.svg" alt="down-arrow" class="arrow">
            </div>
        </a>
        <div class="dropdown-menu mt-0 py-3 px-2 mt-3">
            @foreach (var childMenuItem in Model.Items)
            {
                @await Html.PartialAsync("~/Themes/Basic/Components/Menu/_MenuItem.cshtml", childMenuItem)
            }
        </div>
    </li>
}
